{
  "swagger": "2.0",
  "info": {
    "title": "Sprint",
    "version": "0.1"
  },
  "tags": [
    {
      "name": "SprintRegistry"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/sprint": {
      "post": {
        "operationId": "SprintRegistry_CreateSprint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sprintSprintCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sprintSprintCreateRequest"
            }
          }
        ],
        "tags": [
          "SprintRegistry"
        ]
      }
    },
    "/v1/sprint/issue/add": {
      "post": {
        "operationId": "SprintRegistry_AddIssue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sprintAddIssueResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sprintAddIssueRequest"
            }
          }
        ],
        "tags": [
          "SprintRegistry"
        ]
      }
    },
    "/v1/sprint/issue/remove": {
      "post": {
        "operationId": "SprintRegistry_RemoveIssue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sprintRemoveIssueResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sprintRemoveIssueRequest"
            }
          }
        ],
        "tags": [
          "SprintRegistry"
        ]
      }
    },
    "/v1/sprint/{id}": {
      "get": {
        "operationId": "SprintRegistry_GetSprintByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sprintSprintGetByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "SprintRegistry"
        ]
      },
      "put": {
        "operationId": "SprintRegistry_UpdateSprint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sprintSprintUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sprint": {
                  "$ref": "#/definitions/apisprintSprint"
                }
              }
            }
          }
        ],
        "tags": [
          "SprintRegistry"
        ]
      }
    },
    "/v1/sprints": {
      "get": {
        "operationId": "SprintRegistry_GetSprint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sprintSprintGetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "names",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "projects",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "startedAtAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "finishedAtBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "STATUS_SPRINT_UNKNOWN",
              "STATUS_SPRINT_BACKLOG",
              "STATUS_SPRINT_ACTIVE",
              "STATUS_SPRINT_FINISHED"
            ],
            "default": "STATUS_SPRINT_UNKNOWN"
          }
        ],
        "tags": [
          "SprintRegistry"
        ]
      }
    }
  },
  "definitions": {
    "apisprintSprint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "project": {
          "type": "string",
          "format": "int64"
        },
        "startedAt": {
          "type": "string",
          "format": "date-time"
        },
        "finishedAt": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/statestatusSprint"
        },
        "storiesBacklog": {
          "type": "string",
          "format": "int64"
        },
        "storiesInProgress": {
          "type": "string",
          "format": "int64"
        },
        "storiesDone": {
          "type": "string",
          "format": "int64"
        },
        "issues": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "sprintAddIssueRequest": {
      "type": "object",
      "properties": {
        "sprintId": {
          "type": "string",
          "format": "int64"
        },
        "issueId": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "sprintAddIssueResponse": {
      "type": "object",
      "properties": {
        "sprintId": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "sprintRemoveIssueRequest": {
      "type": "object",
      "properties": {
        "sprintId": {
          "type": "string",
          "format": "int64"
        },
        "issueId": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "sprintRemoveIssueResponse": {
      "type": "object",
      "properties": {
        "sprintId": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "sprintSprintCreateRequest": {
      "type": "object",
      "properties": {
        "sprint": {
          "$ref": "#/definitions/apisprintSprint"
        }
      }
    },
    "sprintSprintCreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "sprintSprintGetByIDResponse": {
      "type": "object",
      "properties": {
        "sprint": {
          "$ref": "#/definitions/apisprintSprint"
        }
      }
    },
    "sprintSprintGetResponse": {
      "type": "object",
      "properties": {
        "sprints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisprintSprint"
          }
        }
      }
    },
    "sprintSprintUpdateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "statestatusSprint": {
      "type": "string",
      "enum": [
        "STATUS_SPRINT_UNKNOWN",
        "STATUS_SPRINT_BACKLOG",
        "STATUS_SPRINT_ACTIVE",
        "STATUS_SPRINT_FINISHED"
      ],
      "default": "STATUS_SPRINT_UNKNOWN"
    }
  }
}
