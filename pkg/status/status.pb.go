// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: status/status.proto

package status

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatusCommon int32

const (
	StatusCommon_STATUS_COMMON_UNKNOWN           StatusCommon = 0
	StatusCommon_STATUS_COMMON_BACKLOG           StatusCommon = 1
	StatusCommon_STATUS_COMMON_IN_PROGRESS       StatusCommon = 2
	StatusCommon_STATUS_COMMON_DONE              StatusCommon = 3
	StatusCommon_STATUS_COMMON_READY_FOR_REVIEW  StatusCommon = 4
	StatusCommon_STATUS_COMMON_IN_REVIEW         StatusCommon = 5
	StatusCommon_STATUS_COMMON_REVIEW_FAILED     StatusCommon = 6
	StatusCommon_STATUS_COMMON_REVIEW_PASSED     StatusCommon = 7
	StatusCommon_STATUS_COMMON_GIVEN_TO_CUSTOMER StatusCommon = 8
	StatusCommon_STATUS_COMMON_CLOSED            StatusCommon = 9
	StatusCommon_STATUS_COMMON_ON_HOLD           StatusCommon = 10
)

// Enum value maps for StatusCommon.
var (
	StatusCommon_name = map[int32]string{
		0:  "STATUS_COMMON_UNKNOWN",
		1:  "STATUS_COMMON_BACKLOG",
		2:  "STATUS_COMMON_IN_PROGRESS",
		3:  "STATUS_COMMON_DONE",
		4:  "STATUS_COMMON_READY_FOR_REVIEW",
		5:  "STATUS_COMMON_IN_REVIEW",
		6:  "STATUS_COMMON_REVIEW_FAILED",
		7:  "STATUS_COMMON_REVIEW_PASSED",
		8:  "STATUS_COMMON_GIVEN_TO_CUSTOMER",
		9:  "STATUS_COMMON_CLOSED",
		10: "STATUS_COMMON_ON_HOLD",
	}
	StatusCommon_value = map[string]int32{
		"STATUS_COMMON_UNKNOWN":           0,
		"STATUS_COMMON_BACKLOG":           1,
		"STATUS_COMMON_IN_PROGRESS":       2,
		"STATUS_COMMON_DONE":              3,
		"STATUS_COMMON_READY_FOR_REVIEW":  4,
		"STATUS_COMMON_IN_REVIEW":         5,
		"STATUS_COMMON_REVIEW_FAILED":     6,
		"STATUS_COMMON_REVIEW_PASSED":     7,
		"STATUS_COMMON_GIVEN_TO_CUSTOMER": 8,
		"STATUS_COMMON_CLOSED":            9,
		"STATUS_COMMON_ON_HOLD":           10,
	}
)

func (x StatusCommon) Enum() *StatusCommon {
	p := new(StatusCommon)
	*p = x
	return p
}

func (x StatusCommon) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusCommon) Descriptor() protoreflect.EnumDescriptor {
	return file_status_status_proto_enumTypes[0].Descriptor()
}

func (StatusCommon) Type() protoreflect.EnumType {
	return &file_status_status_proto_enumTypes[0]
}

func (x StatusCommon) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusCommon.Descriptor instead.
func (StatusCommon) EnumDescriptor() ([]byte, []int) {
	return file_status_status_proto_rawDescGZIP(), []int{0}
}

type StatusDevelopment int32

const (
	StatusDevelopment_STATUS_DEVELOPMENT_UNKNOWN           StatusDevelopment = 0
	StatusDevelopment_STATUS_DEVELOPMENT_BACKLOG           StatusDevelopment = 1
	StatusDevelopment_STATUS_DEVELOPMENT_IN_PROGRESS       StatusDevelopment = 2
	StatusDevelopment_STATUS_DEVELOPMENT_IN_REVIEW         StatusDevelopment = 3
	StatusDevelopment_STATUS_DEVELOPMENT_READY_FOR_TESTING StatusDevelopment = 4
	StatusDevelopment_STATUS_DEVELOPMENT_TESTING           StatusDevelopment = 5
	StatusDevelopment_STATUS_DEVELOPMENT_TESTING_PASSED    StatusDevelopment = 6
	StatusDevelopment_STATUS_DEVELOPMENT_DONE              StatusDevelopment = 7
	StatusDevelopment_STATUS_DEVELOPMENT_READY_TO_DEPLOY   StatusDevelopment = 8
	StatusDevelopment_STATUS_DEVELOPMENT_CLOSED            StatusDevelopment = 9
	StatusDevelopment_STATUS_DEVELOPMENT_ON_HOLD           StatusDevelopment = 10
)

// Enum value maps for StatusDevelopment.
var (
	StatusDevelopment_name = map[int32]string{
		0:  "STATUS_DEVELOPMENT_UNKNOWN",
		1:  "STATUS_DEVELOPMENT_BACKLOG",
		2:  "STATUS_DEVELOPMENT_IN_PROGRESS",
		3:  "STATUS_DEVELOPMENT_IN_REVIEW",
		4:  "STATUS_DEVELOPMENT_READY_FOR_TESTING",
		5:  "STATUS_DEVELOPMENT_TESTING",
		6:  "STATUS_DEVELOPMENT_TESTING_PASSED",
		7:  "STATUS_DEVELOPMENT_DONE",
		8:  "STATUS_DEVELOPMENT_READY_TO_DEPLOY",
		9:  "STATUS_DEVELOPMENT_CLOSED",
		10: "STATUS_DEVELOPMENT_ON_HOLD",
	}
	StatusDevelopment_value = map[string]int32{
		"STATUS_DEVELOPMENT_UNKNOWN":           0,
		"STATUS_DEVELOPMENT_BACKLOG":           1,
		"STATUS_DEVELOPMENT_IN_PROGRESS":       2,
		"STATUS_DEVELOPMENT_IN_REVIEW":         3,
		"STATUS_DEVELOPMENT_READY_FOR_TESTING": 4,
		"STATUS_DEVELOPMENT_TESTING":           5,
		"STATUS_DEVELOPMENT_TESTING_PASSED":    6,
		"STATUS_DEVELOPMENT_DONE":              7,
		"STATUS_DEVELOPMENT_READY_TO_DEPLOY":   8,
		"STATUS_DEVELOPMENT_CLOSED":            9,
		"STATUS_DEVELOPMENT_ON_HOLD":           10,
	}
)

func (x StatusDevelopment) Enum() *StatusDevelopment {
	p := new(StatusDevelopment)
	*p = x
	return p
}

func (x StatusDevelopment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusDevelopment) Descriptor() protoreflect.EnumDescriptor {
	return file_status_status_proto_enumTypes[1].Descriptor()
}

func (StatusDevelopment) Type() protoreflect.EnumType {
	return &file_status_status_proto_enumTypes[1]
}

func (x StatusDevelopment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusDevelopment.Descriptor instead.
func (StatusDevelopment) EnumDescriptor() ([]byte, []int) {
	return file_status_status_proto_rawDescGZIP(), []int{1}
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Status:
	//
	//	*Status_Common
	//	*Status_Development
	Status isStatus_Status `protobuf_oneof:"status"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_status_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_status_status_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_status_status_proto_rawDescGZIP(), []int{0}
}

func (m *Status) GetStatus() isStatus_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (x *Status) GetCommon() StatusCommon {
	if x, ok := x.GetStatus().(*Status_Common); ok {
		return x.Common
	}
	return StatusCommon_STATUS_COMMON_UNKNOWN
}

func (x *Status) GetDevelopment() StatusDevelopment {
	if x, ok := x.GetStatus().(*Status_Development); ok {
		return x.Development
	}
	return StatusDevelopment_STATUS_DEVELOPMENT_UNKNOWN
}

type isStatus_Status interface {
	isStatus_Status()
}

type Status_Common struct {
	Common StatusCommon `protobuf:"varint,1,opt,name=common,proto3,enum=github.constantine27k.crnt_data_manager.api.status.StatusCommon,oneof"`
}

type Status_Development struct {
	Development StatusDevelopment `protobuf:"varint,2,opt,name=development,proto3,enum=github.constantine27k.crnt_data_manager.api.status.StatusDevelopment,oneof"`
}

func (*Status_Common) isStatus_Status() {}

func (*Status_Development) isStatus_Status() {}

var File_status_status_proto protoreflect.FileDescriptor

var file_status_status_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x5a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x12, 0x69, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72,
	0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0xd8, 0x02, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x4d,
	0x4f, 0x4e, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x4c, 0x4f, 0x47, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x49, 0x4e,
	0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x4e,
	0x45, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f,
	0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x52,
	0x45, 0x56, 0x49, 0x45, 0x57, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x56, 0x49,
	0x45, 0x57, 0x10, 0x05, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43,
	0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x06, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x50, 0x41,
	0x53, 0x53, 0x45, 0x44, 0x10, 0x07, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x47, 0x49, 0x56, 0x45, 0x4e, 0x5f, 0x54, 0x4f,
	0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x10, 0x08, 0x12, 0x18, 0x0a, 0x14, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x43, 0x4c, 0x4f,
	0x53, 0x45, 0x44, 0x10, 0x09, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x4f, 0x4e, 0x5f, 0x48, 0x4f, 0x4c, 0x44, 0x10, 0x0a,
	0x2a, 0x8e, 0x03, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x44, 0x45, 0x56, 0x45, 0x4c, 0x4f, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x44, 0x45, 0x56, 0x45, 0x4c, 0x4f, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x42, 0x41, 0x43,
	0x4b, 0x4c, 0x4f, 0x47, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x44, 0x45, 0x56, 0x45, 0x4c, 0x4f, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x5f,
	0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x56, 0x45, 0x4c, 0x4f, 0x50, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x10, 0x03, 0x12, 0x28, 0x0a, 0x24,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x56, 0x45, 0x4c, 0x4f, 0x50, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x54, 0x45, 0x53,
	0x54, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x44, 0x45, 0x56, 0x45, 0x4c, 0x4f, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x45, 0x53,
	0x54, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x25, 0x0a, 0x21, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x44, 0x45, 0x56, 0x45, 0x4c, 0x4f, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x45, 0x53,
	0x54, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x45, 0x44, 0x10, 0x06, 0x12, 0x1b, 0x0a,
	0x17, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x56, 0x45, 0x4c, 0x4f, 0x50, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x07, 0x12, 0x26, 0x0a, 0x22, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x56, 0x45, 0x4c, 0x4f, 0x50, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x54, 0x4f, 0x5f, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59,
	0x10, 0x08, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x56,
	0x45, 0x4c, 0x4f, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10,
	0x09, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x56, 0x45,
	0x4c, 0x4f, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x48, 0x4f, 0x4c, 0x44, 0x10,
	0x0a, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x4b, 0x2f, 0x63,
	0x72, 0x6e, 0x74, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_status_status_proto_rawDescOnce sync.Once
	file_status_status_proto_rawDescData = file_status_status_proto_rawDesc
)

func file_status_status_proto_rawDescGZIP() []byte {
	file_status_status_proto_rawDescOnce.Do(func() {
		file_status_status_proto_rawDescData = protoimpl.X.CompressGZIP(file_status_status_proto_rawDescData)
	})
	return file_status_status_proto_rawDescData
}

var file_status_status_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_status_status_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_status_status_proto_goTypes = []interface{}{
	(StatusCommon)(0),      // 0: github.constantine27k.crnt_data_manager.api.status.StatusCommon
	(StatusDevelopment)(0), // 1: github.constantine27k.crnt_data_manager.api.status.StatusDevelopment
	(*Status)(nil),         // 2: github.constantine27k.crnt_data_manager.api.status.Status
}
var file_status_status_proto_depIdxs = []int32{
	0, // 0: github.constantine27k.crnt_data_manager.api.status.Status.common:type_name -> github.constantine27k.crnt_data_manager.api.status.StatusCommon
	1, // 1: github.constantine27k.crnt_data_manager.api.status.Status.development:type_name -> github.constantine27k.crnt_data_manager.api.status.StatusDevelopment
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_status_status_proto_init() }
func file_status_status_proto_init() {
	if File_status_status_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_status_status_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_status_status_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Status_Common)(nil),
		(*Status_Development)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_status_status_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_status_status_proto_goTypes,
		DependencyIndexes: file_status_status_proto_depIdxs,
		EnumInfos:         file_status_status_proto_enumTypes,
		MessageInfos:      file_status_status_proto_msgTypes,
	}.Build()
	File_status_status_proto = out.File
	file_status_status_proto_rawDesc = nil
	file_status_status_proto_goTypes = nil
	file_status_status_proto_depIdxs = nil
}
