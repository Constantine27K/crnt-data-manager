// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: api/tasks/epic/epic.proto

package epic

import (
	comments "github.com/Constantine27K/crnt-data-manager/pkg/api/comments"
	priority "github.com/Constantine27K/crnt-data-manager/pkg/api/state/priority"
	status "github.com/Constantine27K/crnt-data-manager/pkg/api/state/status"
	template "github.com/Constantine27K/crnt-data-manager/pkg/api/state/template"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Epic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CompositeName string                 `protobuf:"bytes,2,opt,name=composite_name,json=compositeName,proto3" json:"composite_name,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Comments      []*comments.Comment    `protobuf:"bytes,5,rep,name=comments,proto3" json:"comments,omitempty"`
	Author        string                 `protobuf:"bytes,6,opt,name=author,proto3" json:"author,omitempty"`
	Assigned      string                 `protobuf:"bytes,7,opt,name=assigned,proto3" json:"assigned,omitempty"`
	Template      template.Template      `protobuf:"varint,8,opt,name=template,proto3,enum=github.constantine27k.crnt_data_manager.api.state.template.Template" json:"template,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Deadline      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=deadline,proto3" json:"deadline,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Status        *status.TaskStatus     `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	Priority      priority.Priority      `protobuf:"varint,13,opt,name=priority,proto3,enum=github.constantine27k.crnt_data_manager.api.state.priority.Priority" json:"priority,omitempty"`
	ProjectId     int64                  `protobuf:"varint,14,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId   []int64                `protobuf:"varint,15,rep,packed,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
}

func (x *Epic) Reset() {
	*x = Epic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_epic_epic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Epic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Epic) ProtoMessage() {}

func (x *Epic) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_epic_epic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Epic.ProtoReflect.Descriptor instead.
func (*Epic) Descriptor() ([]byte, []int) {
	return file_api_tasks_epic_epic_proto_rawDescGZIP(), []int{0}
}

func (x *Epic) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Epic) GetCompositeName() string {
	if x != nil {
		return x.CompositeName
	}
	return ""
}

func (x *Epic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Epic) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Epic) GetComments() []*comments.Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *Epic) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Epic) GetAssigned() string {
	if x != nil {
		return x.Assigned
	}
	return ""
}

func (x *Epic) GetTemplate() template.Template {
	if x != nil {
		return x.Template
	}
	return template.Template(0)
}

func (x *Epic) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Epic) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *Epic) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Epic) GetStatus() *status.TaskStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Epic) GetPriority() priority.Priority {
	if x != nil {
		return x.Priority
	}
	return priority.Priority(0)
}

func (x *Epic) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *Epic) GetComponentId() []int64 {
	if x != nil {
		return x.ComponentId
	}
	return nil
}

type EpicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CompositeName string                 `protobuf:"bytes,2,opt,name=composite_name,json=compositeName,proto3" json:"composite_name,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Assigned      string                 `protobuf:"bytes,4,opt,name=assigned,proto3" json:"assigned,omitempty"`
	Priority      priority.Priority      `protobuf:"varint,5,opt,name=priority,proto3,enum=github.constantine27k.crnt_data_manager.api.state.priority.Priority" json:"priority,omitempty"`
	Deadline      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=deadline,proto3" json:"deadline,omitempty"`
}

func (x *EpicInfo) Reset() {
	*x = EpicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_epic_epic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpicInfo) ProtoMessage() {}

func (x *EpicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_epic_epic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpicInfo.ProtoReflect.Descriptor instead.
func (*EpicInfo) Descriptor() ([]byte, []int) {
	return file_api_tasks_epic_epic_proto_rawDescGZIP(), []int{1}
}

func (x *EpicInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EpicInfo) GetCompositeName() string {
	if x != nil {
		return x.CompositeName
	}
	return ""
}

func (x *EpicInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EpicInfo) GetAssigned() string {
	if x != nil {
		return x.Assigned
	}
	return ""
}

func (x *EpicInfo) GetPriority() priority.Priority {
	if x != nil {
		return x.Priority
	}
	return priority.Priority(0)
}

func (x *EpicInfo) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

type EpicCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epic *Epic `protobuf:"bytes,1,opt,name=epic,proto3" json:"epic,omitempty"`
}

func (x *EpicCreateRequest) Reset() {
	*x = EpicCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_epic_epic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpicCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpicCreateRequest) ProtoMessage() {}

func (x *EpicCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_epic_epic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpicCreateRequest.ProtoReflect.Descriptor instead.
func (*EpicCreateRequest) Descriptor() ([]byte, []int) {
	return file_api_tasks_epic_epic_proto_rawDescGZIP(), []int{2}
}

func (x *EpicCreateRequest) GetEpic() *Epic {
	if x != nil {
		return x.Epic
	}
	return nil
}

type EpicCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EpicCreateResponse) Reset() {
	*x = EpicCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_epic_epic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpicCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpicCreateResponse) ProtoMessage() {}

func (x *EpicCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_epic_epic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpicCreateResponse.ProtoReflect.Descriptor instead.
func (*EpicCreateResponse) Descriptor() ([]byte, []int) {
	return file_api_tasks_epic_epic_proto_rawDescGZIP(), []int{3}
}

func (x *EpicCreateResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type EpicUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Epic *Epic `protobuf:"bytes,2,opt,name=epic,proto3" json:"epic,omitempty"`
}

func (x *EpicUpdateRequest) Reset() {
	*x = EpicUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_epic_epic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpicUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpicUpdateRequest) ProtoMessage() {}

func (x *EpicUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_epic_epic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpicUpdateRequest.ProtoReflect.Descriptor instead.
func (*EpicUpdateRequest) Descriptor() ([]byte, []int) {
	return file_api_tasks_epic_epic_proto_rawDescGZIP(), []int{4}
}

func (x *EpicUpdateRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EpicUpdateRequest) GetEpic() *Epic {
	if x != nil {
		return x.Epic
	}
	return nil
}

type EpicUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EpicUpdateResponse) Reset() {
	*x = EpicUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_epic_epic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpicUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpicUpdateResponse) ProtoMessage() {}

func (x *EpicUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_epic_epic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpicUpdateResponse.ProtoReflect.Descriptor instead.
func (*EpicUpdateResponse) Descriptor() ([]byte, []int) {
	return file_api_tasks_epic_epic_proto_rawDescGZIP(), []int{5}
}

func (x *EpicUpdateResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type EpicGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids       []int64            `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Author    string             `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Assigned  string             `protobuf:"bytes,3,opt,name=assigned,proto3" json:"assigned,omitempty"`
	ProjectId int64              `protobuf:"varint,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Status    *status.TaskStatus `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *EpicGetRequest) Reset() {
	*x = EpicGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_epic_epic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpicGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpicGetRequest) ProtoMessage() {}

func (x *EpicGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_epic_epic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpicGetRequest.ProtoReflect.Descriptor instead.
func (*EpicGetRequest) Descriptor() ([]byte, []int) {
	return file_api_tasks_epic_epic_proto_rawDescGZIP(), []int{6}
}

func (x *EpicGetRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *EpicGetRequest) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *EpicGetRequest) GetAssigned() string {
	if x != nil {
		return x.Assigned
	}
	return ""
}

func (x *EpicGetRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *EpicGetRequest) GetStatus() *status.TaskStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type EpicGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epics []*Epic `protobuf:"bytes,1,rep,name=epics,proto3" json:"epics,omitempty"`
}

func (x *EpicGetResponse) Reset() {
	*x = EpicGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_epic_epic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpicGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpicGetResponse) ProtoMessage() {}

func (x *EpicGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_epic_epic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpicGetResponse.ProtoReflect.Descriptor instead.
func (*EpicGetResponse) Descriptor() ([]byte, []int) {
	return file_api_tasks_epic_epic_proto_rawDescGZIP(), []int{7}
}

func (x *EpicGetResponse) GetEpics() []*Epic {
	if x != nil {
		return x.Epics
	}
	return nil
}

type EpicInfoGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids       []int64            `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Author    string             `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Assigned  string             `protobuf:"bytes,3,opt,name=assigned,proto3" json:"assigned,omitempty"`
	ProjectId int64              `protobuf:"varint,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Status    *status.TaskStatus `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *EpicInfoGetRequest) Reset() {
	*x = EpicInfoGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_epic_epic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpicInfoGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpicInfoGetRequest) ProtoMessage() {}

func (x *EpicInfoGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_epic_epic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpicInfoGetRequest.ProtoReflect.Descriptor instead.
func (*EpicInfoGetRequest) Descriptor() ([]byte, []int) {
	return file_api_tasks_epic_epic_proto_rawDescGZIP(), []int{8}
}

func (x *EpicInfoGetRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *EpicInfoGetRequest) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *EpicInfoGetRequest) GetAssigned() string {
	if x != nil {
		return x.Assigned
	}
	return ""
}

func (x *EpicInfoGetRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *EpicInfoGetRequest) GetStatus() *status.TaskStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type EpicInfoGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpicInfo []*EpicInfo `protobuf:"bytes,1,rep,name=epic_info,json=epicInfo,proto3" json:"epic_info,omitempty"`
}

func (x *EpicInfoGetResponse) Reset() {
	*x = EpicInfoGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_epic_epic_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpicInfoGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpicInfoGetResponse) ProtoMessage() {}

func (x *EpicInfoGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_epic_epic_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpicInfoGetResponse.ProtoReflect.Descriptor instead.
func (*EpicInfoGetResponse) Descriptor() ([]byte, []int) {
	return file_api_tasks_epic_epic_proto_rawDescGZIP(), []int{9}
}

func (x *EpicInfoGetResponse) GetEpicInfo() []*EpicInfo {
	if x != nil {
		return x.EpicInfo
	}
	return nil
}

type EpicGetByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EpicGetByIDRequest) Reset() {
	*x = EpicGetByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_epic_epic_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpicGetByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpicGetByIDRequest) ProtoMessage() {}

func (x *EpicGetByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_epic_epic_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpicGetByIDRequest.ProtoReflect.Descriptor instead.
func (*EpicGetByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_tasks_epic_epic_proto_rawDescGZIP(), []int{10}
}

func (x *EpicGetByIDRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type EpicGetByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epic *Epic `protobuf:"bytes,1,opt,name=epic,proto3" json:"epic,omitempty"`
}

func (x *EpicGetByIDResponse) Reset() {
	*x = EpicGetByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_epic_epic_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpicGetByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpicGetByIDResponse) ProtoMessage() {}

func (x *EpicGetByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_epic_epic_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpicGetByIDResponse.ProtoReflect.Descriptor instead.
func (*EpicGetByIDResponse) Descriptor() ([]byte, []int) {
	return file_api_tasks_epic_epic_proto_rawDescGZIP(), []int{11}
}

func (x *EpicGetByIDResponse) GetEpic() *Epic {
	if x != nil {
		return x.Epic
	}
	return nil
}

type EpicInfoGetByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EpicInfoGetByIDRequest) Reset() {
	*x = EpicInfoGetByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_epic_epic_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpicInfoGetByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpicInfoGetByIDRequest) ProtoMessage() {}

func (x *EpicInfoGetByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_epic_epic_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpicInfoGetByIDRequest.ProtoReflect.Descriptor instead.
func (*EpicInfoGetByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_tasks_epic_epic_proto_rawDescGZIP(), []int{12}
}

func (x *EpicInfoGetByIDRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type EpicInfoGetByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpicInfo *EpicInfo `protobuf:"bytes,1,opt,name=epic_info,json=epicInfo,proto3" json:"epic_info,omitempty"`
}

func (x *EpicInfoGetByIDResponse) Reset() {
	*x = EpicInfoGetByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_epic_epic_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpicInfoGetByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpicInfoGetByIDResponse) ProtoMessage() {}

func (x *EpicInfoGetByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_epic_epic_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpicInfoGetByIDResponse.ProtoReflect.Descriptor instead.
func (*EpicInfoGetByIDResponse) Descriptor() ([]byte, []int) {
	return file_api_tasks_epic_epic_proto_rawDescGZIP(), []int{13}
}

func (x *EpicInfoGetByIDResponse) GetEpicInfo() *EpicInfo {
	if x != nil {
		return x.EpicInfo
	}
	return nil
}

var File_api_tasks_epic_epic_proto protoreflect.FileDescriptor

var file_api_tasks_epic_epic_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x65, 0x70, 0x69, 0x63,
	0x2f, 0x65, 0x70, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32,
	0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x65,
	0x70, 0x69, 0x63, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x21, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x2f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x06, 0x0a, 0x04, 0x45, 0x70, 0x69, 0x63, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e,
	0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x08, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65,
	0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x5c, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37,
	0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x60, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37,
	0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x8b, 0x02, 0x0a, 0x08,
	0x45, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12,
	0x60, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x65, 0x0a, 0x11, 0x45, 0x70, 0x69,
	0x63, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50,
	0x0a, 0x04, 0x65, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e,
	0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x2e, 0x65, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x70, 0x69, 0x63, 0x52, 0x04, 0x65, 0x70, 0x69, 0x63,
	0x22, 0x24, 0x0a, 0x12, 0x45, 0x70, 0x69, 0x63, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x75, 0x0a, 0x11, 0x45, 0x70, 0x69, 0x63, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x50, 0x0a, 0x04, 0x65,
	0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37,
	0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x65, 0x70,
	0x69, 0x63, 0x2e, 0x45, 0x70, 0x69, 0x63, 0x52, 0x04, 0x65, 0x70, 0x69, 0x63, 0x22, 0x24, 0x0a,
	0x12, 0x45, 0x70, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xd3, 0x01, 0x0a, 0x0e, 0x45, 0x70, 0x69, 0x63, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x5c, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65,
	0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x65, 0x0a, 0x0f, 0x45, 0x70, 0x69,
	0x63, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x05,
	0x65, 0x70, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65,
	0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e,
	0x65, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x70, 0x69, 0x63, 0x52, 0x05, 0x65, 0x70, 0x69, 0x63, 0x73,
	0x22, 0xd7, 0x01, 0x0a, 0x12, 0x45, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x5c, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e,
	0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x74, 0x0a, 0x13, 0x45, 0x70,
	0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5d, 0x0a, 0x09, 0x65, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x65, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x70,
	0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x65, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x24, 0x0a, 0x12, 0x45, 0x70, 0x69, 0x63, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x67, 0x0a, 0x13, 0x45, 0x70, 0x69, 0x63, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a,
	0x04, 0x65, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65,
	0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e,
	0x65, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x70, 0x69, 0x63, 0x52, 0x04, 0x65, 0x70, 0x69, 0x63, 0x22,
	0x28, 0x0a, 0x16, 0x45, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x78, 0x0a, 0x17, 0x45, 0x70, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x09, 0x65, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e,
	0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x65, 0x70, 0x69, 0x63,
	0x2e, 0x45, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x65, 0x70, 0x69, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x32, 0x8a, 0x09, 0x0a, 0x0c, 0x45, 0x70, 0x69, 0x63, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x12, 0xb8, 0x01, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x70, 0x69, 0x63, 0x12, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x65, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x70, 0x69,
	0x63, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x2e, 0x65, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x70, 0x69, 0x63, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0d, 0x3a, 0x01, 0x2a, 0x22, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x70, 0x69, 0x63, 0x12,
	0xbd, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x70, 0x69, 0x63, 0x12, 0x49,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x2e, 0x65, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x70, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37,
	0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x65, 0x70,
	0x69, 0x63, 0x2e, 0x45, 0x70, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a,
	0x1a, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x70, 0x69, 0x63, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0xad, 0x01, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x45, 0x70, 0x69, 0x63, 0x12, 0x46, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65,
	0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e,
	0x65, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x70, 0x69, 0x63, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x65, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x70, 0x69,
	0x63, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x70, 0x69, 0x63, 0x73, 0x12,
	0xbd, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x45, 0x70, 0x69, 0x63, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x2e, 0x65, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x70, 0x69, 0x63, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65,
	0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e,
	0x65, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x70, 0x69, 0x63, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f,
	0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x70, 0x69, 0x63, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0xbd, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x45, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x2e, 0x65, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65,
	0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e,
	0x65, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f,
	0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0xce, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x65, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x70, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x65, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x70, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x42, 0x7c, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x4b, 0x2f, 0x63, 0x72,
	0x6e, 0x74, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x65, 0x70,
	0x69, 0x63, 0x3b, 0x65, 0x70, 0x69, 0x63, 0x92, 0x41, 0x34, 0x12, 0x0b, 0x0a, 0x04, 0x45, 0x70,
	0x69, 0x63, 0x32, 0x03, 0x30, 0x2e, 0x31, 0x2a, 0x01, 0x01, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_tasks_epic_epic_proto_rawDescOnce sync.Once
	file_api_tasks_epic_epic_proto_rawDescData = file_api_tasks_epic_epic_proto_rawDesc
)

func file_api_tasks_epic_epic_proto_rawDescGZIP() []byte {
	file_api_tasks_epic_epic_proto_rawDescOnce.Do(func() {
		file_api_tasks_epic_epic_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_tasks_epic_epic_proto_rawDescData)
	})
	return file_api_tasks_epic_epic_proto_rawDescData
}

var file_api_tasks_epic_epic_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_tasks_epic_epic_proto_goTypes = []interface{}{
	(*Epic)(nil),                    // 0: github.constantine27k.crnt_data_manager.api.tasks.epic.Epic
	(*EpicInfo)(nil),                // 1: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicInfo
	(*EpicCreateRequest)(nil),       // 2: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicCreateRequest
	(*EpicCreateResponse)(nil),      // 3: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicCreateResponse
	(*EpicUpdateRequest)(nil),       // 4: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicUpdateRequest
	(*EpicUpdateResponse)(nil),      // 5: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicUpdateResponse
	(*EpicGetRequest)(nil),          // 6: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicGetRequest
	(*EpicGetResponse)(nil),         // 7: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicGetResponse
	(*EpicInfoGetRequest)(nil),      // 8: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicInfoGetRequest
	(*EpicInfoGetResponse)(nil),     // 9: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicInfoGetResponse
	(*EpicGetByIDRequest)(nil),      // 10: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicGetByIDRequest
	(*EpicGetByIDResponse)(nil),     // 11: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicGetByIDResponse
	(*EpicInfoGetByIDRequest)(nil),  // 12: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicInfoGetByIDRequest
	(*EpicInfoGetByIDResponse)(nil), // 13: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicInfoGetByIDResponse
	(*comments.Comment)(nil),        // 14: github.constantine27k.crnt_data_manager.api.comments.Comment
	(template.Template)(0),          // 15: github.constantine27k.crnt_data_manager.api.state.template.Template
	(*timestamppb.Timestamp)(nil),   // 16: google.protobuf.Timestamp
	(*status.TaskStatus)(nil),       // 17: github.constantine27k.crnt_data_manager.api.state.status.TaskStatus
	(priority.Priority)(0),          // 18: github.constantine27k.crnt_data_manager.api.state.priority.Priority
}
var file_api_tasks_epic_epic_proto_depIdxs = []int32{
	14, // 0: github.constantine27k.crnt_data_manager.api.tasks.epic.Epic.comments:type_name -> github.constantine27k.crnt_data_manager.api.comments.Comment
	15, // 1: github.constantine27k.crnt_data_manager.api.tasks.epic.Epic.template:type_name -> github.constantine27k.crnt_data_manager.api.state.template.Template
	16, // 2: github.constantine27k.crnt_data_manager.api.tasks.epic.Epic.created_at:type_name -> google.protobuf.Timestamp
	16, // 3: github.constantine27k.crnt_data_manager.api.tasks.epic.Epic.deadline:type_name -> google.protobuf.Timestamp
	16, // 4: github.constantine27k.crnt_data_manager.api.tasks.epic.Epic.updated_at:type_name -> google.protobuf.Timestamp
	17, // 5: github.constantine27k.crnt_data_manager.api.tasks.epic.Epic.status:type_name -> github.constantine27k.crnt_data_manager.api.state.status.TaskStatus
	18, // 6: github.constantine27k.crnt_data_manager.api.tasks.epic.Epic.priority:type_name -> github.constantine27k.crnt_data_manager.api.state.priority.Priority
	18, // 7: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicInfo.priority:type_name -> github.constantine27k.crnt_data_manager.api.state.priority.Priority
	16, // 8: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicInfo.deadline:type_name -> google.protobuf.Timestamp
	0,  // 9: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicCreateRequest.epic:type_name -> github.constantine27k.crnt_data_manager.api.tasks.epic.Epic
	0,  // 10: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicUpdateRequest.epic:type_name -> github.constantine27k.crnt_data_manager.api.tasks.epic.Epic
	17, // 11: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicGetRequest.status:type_name -> github.constantine27k.crnt_data_manager.api.state.status.TaskStatus
	0,  // 12: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicGetResponse.epics:type_name -> github.constantine27k.crnt_data_manager.api.tasks.epic.Epic
	17, // 13: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicInfoGetRequest.status:type_name -> github.constantine27k.crnt_data_manager.api.state.status.TaskStatus
	1,  // 14: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicInfoGetResponse.epic_info:type_name -> github.constantine27k.crnt_data_manager.api.tasks.epic.EpicInfo
	0,  // 15: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicGetByIDResponse.epic:type_name -> github.constantine27k.crnt_data_manager.api.tasks.epic.Epic
	1,  // 16: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicInfoGetByIDResponse.epic_info:type_name -> github.constantine27k.crnt_data_manager.api.tasks.epic.EpicInfo
	2,  // 17: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicRegistry.CreateEpic:input_type -> github.constantine27k.crnt_data_manager.api.tasks.epic.EpicCreateRequest
	4,  // 18: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicRegistry.UpdateEpic:input_type -> github.constantine27k.crnt_data_manager.api.tasks.epic.EpicUpdateRequest
	6,  // 19: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicRegistry.GetEpic:input_type -> github.constantine27k.crnt_data_manager.api.tasks.epic.EpicGetRequest
	10, // 20: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicRegistry.GetEpicByID:input_type -> github.constantine27k.crnt_data_manager.api.tasks.epic.EpicGetByIDRequest
	8,  // 21: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicRegistry.GetEpicInfo:input_type -> github.constantine27k.crnt_data_manager.api.tasks.epic.EpicInfoGetRequest
	12, // 22: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicRegistry.GetEpicInfoByID:input_type -> github.constantine27k.crnt_data_manager.api.tasks.epic.EpicInfoGetByIDRequest
	3,  // 23: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicRegistry.CreateEpic:output_type -> github.constantine27k.crnt_data_manager.api.tasks.epic.EpicCreateResponse
	5,  // 24: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicRegistry.UpdateEpic:output_type -> github.constantine27k.crnt_data_manager.api.tasks.epic.EpicUpdateResponse
	7,  // 25: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicRegistry.GetEpic:output_type -> github.constantine27k.crnt_data_manager.api.tasks.epic.EpicGetResponse
	11, // 26: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicRegistry.GetEpicByID:output_type -> github.constantine27k.crnt_data_manager.api.tasks.epic.EpicGetByIDResponse
	9,  // 27: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicRegistry.GetEpicInfo:output_type -> github.constantine27k.crnt_data_manager.api.tasks.epic.EpicInfoGetResponse
	13, // 28: github.constantine27k.crnt_data_manager.api.tasks.epic.EpicRegistry.GetEpicInfoByID:output_type -> github.constantine27k.crnt_data_manager.api.tasks.epic.EpicInfoGetByIDResponse
	23, // [23:29] is the sub-list for method output_type
	17, // [17:23] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_api_tasks_epic_epic_proto_init() }
func file_api_tasks_epic_epic_proto_init() {
	if File_api_tasks_epic_epic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_tasks_epic_epic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Epic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_epic_epic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_epic_epic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpicCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_epic_epic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpicCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_epic_epic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpicUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_epic_epic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpicUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_epic_epic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpicGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_epic_epic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpicGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_epic_epic_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpicInfoGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_epic_epic_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpicInfoGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_epic_epic_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpicGetByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_epic_epic_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpicGetByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_epic_epic_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpicInfoGetByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_epic_epic_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpicInfoGetByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_tasks_epic_epic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_tasks_epic_epic_proto_goTypes,
		DependencyIndexes: file_api_tasks_epic_epic_proto_depIdxs,
		MessageInfos:      file_api_tasks_epic_epic_proto_msgTypes,
	}.Build()
	File_api_tasks_epic_epic_proto = out.File
	file_api_tasks_epic_epic_proto_rawDesc = nil
	file_api_tasks_epic_epic_proto_goTypes = nil
	file_api_tasks_epic_epic_proto_depIdxs = nil
}
