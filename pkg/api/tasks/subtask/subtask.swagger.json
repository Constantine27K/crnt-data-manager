{
  "swagger": "2.0",
  "info": {
    "title": "Subtask",
    "version": "0.1"
  },
  "tags": [
    {
      "name": "SubtaskRegistry"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/subtask": {
      "post": {
        "operationId": "SubtaskRegistry_CreateSubtask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/subtaskSubtaskCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/subtaskSubtaskCreateRequest"
            }
          }
        ],
        "tags": [
          "SubtaskRegistry"
        ]
      }
    },
    "/v1/subtask/{id}": {
      "get": {
        "operationId": "SubtaskRegistry_GetSubtaskByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/subtaskSubtaskGetByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "SubtaskRegistry"
        ]
      },
      "put": {
        "operationId": "SubtaskRegistry_UpdateSubtask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/subtaskSubtaskUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "subtask": {
                  "$ref": "#/definitions/subtaskSubtask"
                }
              }
            }
          }
        ],
        "tags": [
          "SubtaskRegistry"
        ]
      }
    },
    "/v1/subtask_info/{id}": {
      "get": {
        "operationId": "SubtaskRegistry_GetSubtaskInfoByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/subtaskSubtaskInfoGetByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "SubtaskRegistry"
        ]
      }
    },
    "/v1/subtasks": {
      "get": {
        "operationId": "SubtaskRegistry_GetSubtask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/subtaskSubtaskGetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "taskIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "author",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assigned",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "status.common",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "STATUS_COMMON_UNKNOWN",
              "STATUS_COMMON_BACKLOG",
              "STATUS_COMMON_IN_PROGRESS",
              "STATUS_COMMON_DONE",
              "STATUS_COMMON_READY_FOR_REVIEW",
              "STATUS_COMMON_IN_REVIEW",
              "STATUS_COMMON_REVIEW_FAILED",
              "STATUS_COMMON_REVIEW_PASSED",
              "STATUS_COMMON_GIVEN_TO_CUSTOMER",
              "STATUS_COMMON_CLOSED",
              "STATUS_COMMON_ON_HOLD"
            ],
            "default": "STATUS_COMMON_UNKNOWN"
          },
          {
            "name": "status.development",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "STATUS_DEVELOPMENT_UNKNOWN",
              "STATUS_DEVELOPMENT_BACKLOG",
              "STATUS_DEVELOPMENT_IN_PROGRESS",
              "STATUS_DEVELOPMENT_IN_REVIEW",
              "STATUS_DEVELOPMENT_READY_FOR_TESTING",
              "STATUS_DEVELOPMENT_TESTING",
              "STATUS_DEVELOPMENT_TESTING_PASSED",
              "STATUS_DEVELOPMENT_DONE",
              "STATUS_DEVELOPMENT_READY_TO_DEPLOY",
              "STATUS_DEVELOPMENT_CLOSED",
              "STATUS_DEVELOPMENT_ON_HOLD"
            ],
            "default": "STATUS_DEVELOPMENT_UNKNOWN"
          }
        ],
        "tags": [
          "SubtaskRegistry"
        ]
      }
    },
    "/v1/subtasks_info": {
      "get": {
        "operationId": "SubtaskRegistry_GetSubtaskInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/subtaskSubtaskInfoGetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "taskIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "assigned",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "status.common",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "STATUS_COMMON_UNKNOWN",
              "STATUS_COMMON_BACKLOG",
              "STATUS_COMMON_IN_PROGRESS",
              "STATUS_COMMON_DONE",
              "STATUS_COMMON_READY_FOR_REVIEW",
              "STATUS_COMMON_IN_REVIEW",
              "STATUS_COMMON_REVIEW_FAILED",
              "STATUS_COMMON_REVIEW_PASSED",
              "STATUS_COMMON_GIVEN_TO_CUSTOMER",
              "STATUS_COMMON_CLOSED",
              "STATUS_COMMON_ON_HOLD"
            ],
            "default": "STATUS_COMMON_UNKNOWN"
          },
          {
            "name": "status.development",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "STATUS_DEVELOPMENT_UNKNOWN",
              "STATUS_DEVELOPMENT_BACKLOG",
              "STATUS_DEVELOPMENT_IN_PROGRESS",
              "STATUS_DEVELOPMENT_IN_REVIEW",
              "STATUS_DEVELOPMENT_READY_FOR_TESTING",
              "STATUS_DEVELOPMENT_TESTING",
              "STATUS_DEVELOPMENT_TESTING_PASSED",
              "STATUS_DEVELOPMENT_DONE",
              "STATUS_DEVELOPMENT_READY_TO_DEPLOY",
              "STATUS_DEVELOPMENT_CLOSED",
              "STATUS_DEVELOPMENT_ON_HOLD"
            ],
            "default": "STATUS_DEVELOPMENT_UNKNOWN"
          }
        ],
        "tags": [
          "SubtaskRegistry"
        ]
      }
    }
  },
  "definitions": {
    "commentsComment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "authorId": {
          "type": "string",
          "format": "int64"
        },
        "writtenAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "priorityPriority": {
      "type": "string",
      "enum": [
        "PRIORITY_UNKNOWN",
        "PRIORITY_CRITICAL",
        "PRIORITY_HIGH",
        "PRIORITY_MEDIUM",
        "PRIORITY_LOW"
      ],
      "default": "PRIORITY_UNKNOWN"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "statusTaskCommon": {
      "type": "string",
      "enum": [
        "STATUS_COMMON_UNKNOWN",
        "STATUS_COMMON_BACKLOG",
        "STATUS_COMMON_IN_PROGRESS",
        "STATUS_COMMON_DONE",
        "STATUS_COMMON_READY_FOR_REVIEW",
        "STATUS_COMMON_IN_REVIEW",
        "STATUS_COMMON_REVIEW_FAILED",
        "STATUS_COMMON_REVIEW_PASSED",
        "STATUS_COMMON_GIVEN_TO_CUSTOMER",
        "STATUS_COMMON_CLOSED",
        "STATUS_COMMON_ON_HOLD"
      ],
      "default": "STATUS_COMMON_UNKNOWN"
    },
    "statusTaskDevelopment": {
      "type": "string",
      "enum": [
        "STATUS_DEVELOPMENT_UNKNOWN",
        "STATUS_DEVELOPMENT_BACKLOG",
        "STATUS_DEVELOPMENT_IN_PROGRESS",
        "STATUS_DEVELOPMENT_IN_REVIEW",
        "STATUS_DEVELOPMENT_READY_FOR_TESTING",
        "STATUS_DEVELOPMENT_TESTING",
        "STATUS_DEVELOPMENT_TESTING_PASSED",
        "STATUS_DEVELOPMENT_DONE",
        "STATUS_DEVELOPMENT_READY_TO_DEPLOY",
        "STATUS_DEVELOPMENT_CLOSED",
        "STATUS_DEVELOPMENT_ON_HOLD"
      ],
      "default": "STATUS_DEVELOPMENT_UNKNOWN"
    },
    "statusTaskStatus": {
      "type": "object",
      "properties": {
        "common": {
          "$ref": "#/definitions/statusTaskCommon"
        },
        "development": {
          "$ref": "#/definitions/statusTaskDevelopment"
        }
      }
    },
    "subtaskSubtask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "compositeName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "taskId": {
          "type": "string",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commentsComment"
          }
        },
        "author": {
          "type": "string"
        },
        "assigned": {
          "type": "string"
        },
        "qa": {
          "type": "string"
        },
        "reviewer": {
          "type": "string"
        },
        "template": {
          "$ref": "#/definitions/templateTemplate"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "deadline": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/statusTaskStatus"
        },
        "priority": {
          "$ref": "#/definitions/priorityPriority"
        },
        "projectId": {
          "type": "string",
          "format": "int64"
        },
        "componentId": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "storyPoints": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "subtaskSubtaskCreateRequest": {
      "type": "object",
      "properties": {
        "subtask": {
          "$ref": "#/definitions/subtaskSubtask"
        }
      }
    },
    "subtaskSubtaskCreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "subtaskSubtaskGetByIDResponse": {
      "type": "object",
      "properties": {
        "subtask": {
          "$ref": "#/definitions/subtaskSubtask"
        }
      }
    },
    "subtaskSubtaskGetResponse": {
      "type": "object",
      "properties": {
        "subtasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/subtaskSubtask"
          }
        }
      }
    },
    "subtaskSubtaskInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "compositeName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "assigned": {
          "type": "string"
        },
        "priority": {
          "$ref": "#/definitions/priorityPriority"
        },
        "storyPoints": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "subtaskSubtaskInfoGetByIDResponse": {
      "type": "object",
      "properties": {
        "subtaskInfo": {
          "$ref": "#/definitions/subtaskSubtaskInfo"
        }
      }
    },
    "subtaskSubtaskInfoGetResponse": {
      "type": "object",
      "properties": {
        "subtasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/subtaskSubtaskInfo"
          }
        }
      }
    },
    "subtaskSubtaskUpdateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "templateTemplate": {
      "type": "string",
      "enum": [
        "TEMPLATE_UNKNOWN",
        "TEMPLATE_COMMON",
        "TEMPLATE_DEVELOPMENT"
      ],
      "default": "TEMPLATE_UNKNOWN"
    }
  }
}
