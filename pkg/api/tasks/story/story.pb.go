// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: api/tasks/story/story.proto

package story

import (
	comments "github.com/Constantine27K/crnt-data-manager/pkg/api/comments"
	priority "github.com/Constantine27K/crnt-data-manager/pkg/api/state/priority"
	status "github.com/Constantine27K/crnt-data-manager/pkg/api/state/status"
	template "github.com/Constantine27K/crnt-data-manager/pkg/api/state/template"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Story struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CompositeName string                 `protobuf:"bytes,2,opt,name=composite_name,json=compositeName,proto3" json:"composite_name,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	EpicId        int64                  `protobuf:"varint,4,opt,name=epic_id,json=epicId,proto3" json:"epic_id,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Comments      []*comments.Comment    `protobuf:"bytes,6,rep,name=comments,proto3" json:"comments,omitempty"`
	Author        string                 `protobuf:"bytes,7,opt,name=author,proto3" json:"author,omitempty"`
	Assigned      string                 `protobuf:"bytes,8,opt,name=assigned,proto3" json:"assigned,omitempty"`
	Qa            string                 `protobuf:"bytes,9,opt,name=qa,proto3" json:"qa,omitempty"`
	Reviewer      string                 `protobuf:"bytes,10,opt,name=reviewer,proto3" json:"reviewer,omitempty"`
	Template      template.Template      `protobuf:"varint,11,opt,name=template,proto3,enum=github.constantine27k.crnt_data_manager.api.state.template.Template" json:"template,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Deadline      *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=deadline,proto3" json:"deadline,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Status        *status.TaskStatus     `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
	Priority      priority.Priority      `protobuf:"varint,16,opt,name=priority,proto3,enum=github.constantine27k.crnt_data_manager.api.state.priority.Priority" json:"priority,omitempty"`
	SprintId      int64                  `protobuf:"varint,17,opt,name=sprint_id,json=sprintId,proto3" json:"sprint_id,omitempty"`
	ProjectId     int64                  `protobuf:"varint,18,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId   []int64                `protobuf:"varint,19,rep,packed,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	StoryPoints   int64                  `protobuf:"varint,20,opt,name=story_points,json=storyPoints,proto3" json:"story_points,omitempty"`
}

func (x *Story) Reset() {
	*x = Story{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_story_story_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Story) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Story) ProtoMessage() {}

func (x *Story) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_story_story_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Story.ProtoReflect.Descriptor instead.
func (*Story) Descriptor() ([]byte, []int) {
	return file_api_tasks_story_story_proto_rawDescGZIP(), []int{0}
}

func (x *Story) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Story) GetCompositeName() string {
	if x != nil {
		return x.CompositeName
	}
	return ""
}

func (x *Story) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Story) GetEpicId() int64 {
	if x != nil {
		return x.EpicId
	}
	return 0
}

func (x *Story) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Story) GetComments() []*comments.Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *Story) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Story) GetAssigned() string {
	if x != nil {
		return x.Assigned
	}
	return ""
}

func (x *Story) GetQa() string {
	if x != nil {
		return x.Qa
	}
	return ""
}

func (x *Story) GetReviewer() string {
	if x != nil {
		return x.Reviewer
	}
	return ""
}

func (x *Story) GetTemplate() template.Template {
	if x != nil {
		return x.Template
	}
	return template.Template(0)
}

func (x *Story) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Story) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *Story) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Story) GetStatus() *status.TaskStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Story) GetPriority() priority.Priority {
	if x != nil {
		return x.Priority
	}
	return priority.Priority(0)
}

func (x *Story) GetSprintId() int64 {
	if x != nil {
		return x.SprintId
	}
	return 0
}

func (x *Story) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *Story) GetComponentId() []int64 {
	if x != nil {
		return x.ComponentId
	}
	return nil
}

func (x *Story) GetStoryPoints() int64 {
	if x != nil {
		return x.StoryPoints
	}
	return 0
}

type StoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CompositeName string            `protobuf:"bytes,2,opt,name=composite_name,json=compositeName,proto3" json:"composite_name,omitempty"`
	Name          string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Assigned      string            `protobuf:"bytes,4,opt,name=assigned,proto3" json:"assigned,omitempty"`
	Priority      priority.Priority `protobuf:"varint,5,opt,name=priority,proto3,enum=github.constantine27k.crnt_data_manager.api.state.priority.Priority" json:"priority,omitempty"`
	StoryPoints   int64             `protobuf:"varint,6,opt,name=story_points,json=storyPoints,proto3" json:"story_points,omitempty"`
}

func (x *StoryInfo) Reset() {
	*x = StoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_story_story_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryInfo) ProtoMessage() {}

func (x *StoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_story_story_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryInfo.ProtoReflect.Descriptor instead.
func (*StoryInfo) Descriptor() ([]byte, []int) {
	return file_api_tasks_story_story_proto_rawDescGZIP(), []int{1}
}

func (x *StoryInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StoryInfo) GetCompositeName() string {
	if x != nil {
		return x.CompositeName
	}
	return ""
}

func (x *StoryInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoryInfo) GetAssigned() string {
	if x != nil {
		return x.Assigned
	}
	return ""
}

func (x *StoryInfo) GetPriority() priority.Priority {
	if x != nil {
		return x.Priority
	}
	return priority.Priority(0)
}

func (x *StoryInfo) GetStoryPoints() int64 {
	if x != nil {
		return x.StoryPoints
	}
	return 0
}

type StoryCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stories *Story `protobuf:"bytes,1,opt,name=stories,proto3" json:"stories,omitempty"`
}

func (x *StoryCreateRequest) Reset() {
	*x = StoryCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_story_story_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryCreateRequest) ProtoMessage() {}

func (x *StoryCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_story_story_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryCreateRequest.ProtoReflect.Descriptor instead.
func (*StoryCreateRequest) Descriptor() ([]byte, []int) {
	return file_api_tasks_story_story_proto_rawDescGZIP(), []int{2}
}

func (x *StoryCreateRequest) GetStories() *Story {
	if x != nil {
		return x.Stories
	}
	return nil
}

type StoryCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StoryCreateResponse) Reset() {
	*x = StoryCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_story_story_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryCreateResponse) ProtoMessage() {}

func (x *StoryCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_story_story_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryCreateResponse.ProtoReflect.Descriptor instead.
func (*StoryCreateResponse) Descriptor() ([]byte, []int) {
	return file_api_tasks_story_story_proto_rawDescGZIP(), []int{3}
}

func (x *StoryCreateResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type StoryUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Story *Story `protobuf:"bytes,2,opt,name=story,proto3" json:"story,omitempty"`
}

func (x *StoryUpdateRequest) Reset() {
	*x = StoryUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_story_story_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryUpdateRequest) ProtoMessage() {}

func (x *StoryUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_story_story_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryUpdateRequest.ProtoReflect.Descriptor instead.
func (*StoryUpdateRequest) Descriptor() ([]byte, []int) {
	return file_api_tasks_story_story_proto_rawDescGZIP(), []int{4}
}

func (x *StoryUpdateRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StoryUpdateRequest) GetStory() *Story {
	if x != nil {
		return x.Story
	}
	return nil
}

type StoryUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StoryUpdateResponse) Reset() {
	*x = StoryUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_story_story_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryUpdateResponse) ProtoMessage() {}

func (x *StoryUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_story_story_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryUpdateResponse.ProtoReflect.Descriptor instead.
func (*StoryUpdateResponse) Descriptor() ([]byte, []int) {
	return file_api_tasks_story_story_proto_rawDescGZIP(), []int{5}
}

func (x *StoryUpdateResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type StoryGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids       []int64            `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	EpicIds   []int64            `protobuf:"varint,2,rep,packed,name=epic_ids,json=epicIds,proto3" json:"epic_ids,omitempty"`
	Author    string             `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Assigned  string             `protobuf:"bytes,4,opt,name=assigned,proto3" json:"assigned,omitempty"`
	SprintId  int64              `protobuf:"varint,5,opt,name=sprint_id,json=sprintId,proto3" json:"sprint_id,omitempty"`
	ProjectId int64              `protobuf:"varint,6,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Status    *status.TaskStatus `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *StoryGetRequest) Reset() {
	*x = StoryGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_story_story_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryGetRequest) ProtoMessage() {}

func (x *StoryGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_story_story_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryGetRequest.ProtoReflect.Descriptor instead.
func (*StoryGetRequest) Descriptor() ([]byte, []int) {
	return file_api_tasks_story_story_proto_rawDescGZIP(), []int{6}
}

func (x *StoryGetRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *StoryGetRequest) GetEpicIds() []int64 {
	if x != nil {
		return x.EpicIds
	}
	return nil
}

func (x *StoryGetRequest) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *StoryGetRequest) GetAssigned() string {
	if x != nil {
		return x.Assigned
	}
	return ""
}

func (x *StoryGetRequest) GetSprintId() int64 {
	if x != nil {
		return x.SprintId
	}
	return 0
}

func (x *StoryGetRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *StoryGetRequest) GetStatus() *status.TaskStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type StoryGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stories []*Story `protobuf:"bytes,1,rep,name=stories,proto3" json:"stories,omitempty"`
}

func (x *StoryGetResponse) Reset() {
	*x = StoryGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_story_story_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryGetResponse) ProtoMessage() {}

func (x *StoryGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_story_story_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryGetResponse.ProtoReflect.Descriptor instead.
func (*StoryGetResponse) Descriptor() ([]byte, []int) {
	return file_api_tasks_story_story_proto_rawDescGZIP(), []int{7}
}

func (x *StoryGetResponse) GetStories() []*Story {
	if x != nil {
		return x.Stories
	}
	return nil
}

type StoryInfoGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64            `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	EpicIds  []int64            `protobuf:"varint,2,rep,packed,name=epic_ids,json=epicIds,proto3" json:"epic_ids,omitempty"`
	Assigned string             `protobuf:"bytes,3,opt,name=assigned,proto3" json:"assigned,omitempty"`
	SprintId int64              `protobuf:"varint,4,opt,name=sprint_id,json=sprintId,proto3" json:"sprint_id,omitempty"`
	Status   *status.TaskStatus `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *StoryInfoGetRequest) Reset() {
	*x = StoryInfoGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_story_story_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryInfoGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryInfoGetRequest) ProtoMessage() {}

func (x *StoryInfoGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_story_story_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryInfoGetRequest.ProtoReflect.Descriptor instead.
func (*StoryInfoGetRequest) Descriptor() ([]byte, []int) {
	return file_api_tasks_story_story_proto_rawDescGZIP(), []int{8}
}

func (x *StoryInfoGetRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *StoryInfoGetRequest) GetEpicIds() []int64 {
	if x != nil {
		return x.EpicIds
	}
	return nil
}

func (x *StoryInfoGetRequest) GetAssigned() string {
	if x != nil {
		return x.Assigned
	}
	return ""
}

func (x *StoryInfoGetRequest) GetSprintId() int64 {
	if x != nil {
		return x.SprintId
	}
	return 0
}

func (x *StoryInfoGetRequest) GetStatus() *status.TaskStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type StoryInfoGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryInfo []*StoryInfo `protobuf:"bytes,1,rep,name=story_info,json=storyInfo,proto3" json:"story_info,omitempty"`
}

func (x *StoryInfoGetResponse) Reset() {
	*x = StoryInfoGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_story_story_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryInfoGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryInfoGetResponse) ProtoMessage() {}

func (x *StoryInfoGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_story_story_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryInfoGetResponse.ProtoReflect.Descriptor instead.
func (*StoryInfoGetResponse) Descriptor() ([]byte, []int) {
	return file_api_tasks_story_story_proto_rawDescGZIP(), []int{9}
}

func (x *StoryInfoGetResponse) GetStoryInfo() []*StoryInfo {
	if x != nil {
		return x.StoryInfo
	}
	return nil
}

type StoryGetByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StoryGetByIDRequest) Reset() {
	*x = StoryGetByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_story_story_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryGetByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryGetByIDRequest) ProtoMessage() {}

func (x *StoryGetByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_story_story_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryGetByIDRequest.ProtoReflect.Descriptor instead.
func (*StoryGetByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_tasks_story_story_proto_rawDescGZIP(), []int{10}
}

func (x *StoryGetByIDRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type StoryGetByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Story *Story `protobuf:"bytes,1,opt,name=story,proto3" json:"story,omitempty"`
}

func (x *StoryGetByIDResponse) Reset() {
	*x = StoryGetByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_story_story_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryGetByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryGetByIDResponse) ProtoMessage() {}

func (x *StoryGetByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_story_story_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryGetByIDResponse.ProtoReflect.Descriptor instead.
func (*StoryGetByIDResponse) Descriptor() ([]byte, []int) {
	return file_api_tasks_story_story_proto_rawDescGZIP(), []int{11}
}

func (x *StoryGetByIDResponse) GetStory() *Story {
	if x != nil {
		return x.Story
	}
	return nil
}

type StoryInfoGetByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StoryInfoGetByIDRequest) Reset() {
	*x = StoryInfoGetByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_story_story_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryInfoGetByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryInfoGetByIDRequest) ProtoMessage() {}

func (x *StoryInfoGetByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_story_story_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryInfoGetByIDRequest.ProtoReflect.Descriptor instead.
func (*StoryInfoGetByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_tasks_story_story_proto_rawDescGZIP(), []int{12}
}

func (x *StoryInfoGetByIDRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type StoryInfoGetByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryInfo *StoryInfo `protobuf:"bytes,1,opt,name=story_info,json=storyInfo,proto3" json:"story_info,omitempty"`
}

func (x *StoryInfoGetByIDResponse) Reset() {
	*x = StoryInfoGetByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tasks_story_story_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryInfoGetByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryInfoGetByIDResponse) ProtoMessage() {}

func (x *StoryInfoGetByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tasks_story_story_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryInfoGetByIDResponse.ProtoReflect.Descriptor instead.
func (*StoryInfoGetByIDResponse) Descriptor() ([]byte, []int) {
	return file_api_tasks_story_story_proto_rawDescGZIP(), []int{13}
}

func (x *StoryInfoGetByIDResponse) GetStoryInfo() *StoryInfo {
	if x != nil {
		return x.StoryInfo
	}
	return nil
}

var File_api_tasks_story_story_proto protoreflect.FileDescriptor

var file_api_tasks_story_story_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x37, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e,
	0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65,
	0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x2f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x07, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x65, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37,
	0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x61, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x71, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x12, 0x60, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x36, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x5c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x60, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x2e,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x13,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x22, 0xf7, 0x01, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65,
	0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x6e,
	0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72,
	0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x25,
	0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7a, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x54, 0x0a, 0x05, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32,
	0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x22, 0x25, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8c, 0x02, 0x0a, 0x0f, 0x53, 0x74, 0x6f,
	0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x70, 0x69, 0x63, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x5c, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37,
	0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6c, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e,
	0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x73, 0x74,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x70, 0x69, 0x63, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x5c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x79, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0a, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69,
	0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x25, 0x0a, 0x13,
	0x53, 0x74, 0x6f, 0x72, 0x79, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x6c, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x05, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32,
	0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x22, 0x29, 0x0a, 0x17, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7d, 0x0a, 0x18,
	0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e,
	0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xb0, 0x09, 0x0a, 0x0d,
	0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0xbe, 0x01,
	0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x4b, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69,
	0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4c, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32,
	0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e,
	0x3a, 0x01, 0x2a, 0x22, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0xc3,
	0x01, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x4b,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4c, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65,
	0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x13, 0x3a, 0x01, 0x2a, 0x1a, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0xb4, 0x01, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65,
	0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0xc3, 0x01, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x12, 0x4c, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e,
	0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32,
	0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0xc3, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0xd4, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x44, 0x12, 0x50, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e,
	0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x51,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x69, 0x6e, 0x65, 0x32, 0x37, 0x6b, 0x2e, 0x63, 0x72, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x7f,
	0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x4b, 0x2f, 0x63, 0x72, 0x6e, 0x74,
	0x2d, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x3b, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x92, 0x41, 0x35, 0x12, 0x0c, 0x0a, 0x05, 0x53, 0x74,
	0x6f, 0x72, 0x79, 0x32, 0x03, 0x30, 0x2e, 0x31, 0x2a, 0x01, 0x01, 0x32, 0x10, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_tasks_story_story_proto_rawDescOnce sync.Once
	file_api_tasks_story_story_proto_rawDescData = file_api_tasks_story_story_proto_rawDesc
)

func file_api_tasks_story_story_proto_rawDescGZIP() []byte {
	file_api_tasks_story_story_proto_rawDescOnce.Do(func() {
		file_api_tasks_story_story_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_tasks_story_story_proto_rawDescData)
	})
	return file_api_tasks_story_story_proto_rawDescData
}

var file_api_tasks_story_story_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_tasks_story_story_proto_goTypes = []interface{}{
	(*Story)(nil),                    // 0: github.constantine27k.crnt_data_manager.api.tasks.story.Story
	(*StoryInfo)(nil),                // 1: github.constantine27k.crnt_data_manager.api.tasks.story.StoryInfo
	(*StoryCreateRequest)(nil),       // 2: github.constantine27k.crnt_data_manager.api.tasks.story.StoryCreateRequest
	(*StoryCreateResponse)(nil),      // 3: github.constantine27k.crnt_data_manager.api.tasks.story.StoryCreateResponse
	(*StoryUpdateRequest)(nil),       // 4: github.constantine27k.crnt_data_manager.api.tasks.story.StoryUpdateRequest
	(*StoryUpdateResponse)(nil),      // 5: github.constantine27k.crnt_data_manager.api.tasks.story.StoryUpdateResponse
	(*StoryGetRequest)(nil),          // 6: github.constantine27k.crnt_data_manager.api.tasks.story.StoryGetRequest
	(*StoryGetResponse)(nil),         // 7: github.constantine27k.crnt_data_manager.api.tasks.story.StoryGetResponse
	(*StoryInfoGetRequest)(nil),      // 8: github.constantine27k.crnt_data_manager.api.tasks.story.StoryInfoGetRequest
	(*StoryInfoGetResponse)(nil),     // 9: github.constantine27k.crnt_data_manager.api.tasks.story.StoryInfoGetResponse
	(*StoryGetByIDRequest)(nil),      // 10: github.constantine27k.crnt_data_manager.api.tasks.story.StoryGetByIDRequest
	(*StoryGetByIDResponse)(nil),     // 11: github.constantine27k.crnt_data_manager.api.tasks.story.StoryGetByIDResponse
	(*StoryInfoGetByIDRequest)(nil),  // 12: github.constantine27k.crnt_data_manager.api.tasks.story.StoryInfoGetByIDRequest
	(*StoryInfoGetByIDResponse)(nil), // 13: github.constantine27k.crnt_data_manager.api.tasks.story.StoryInfoGetByIDResponse
	(*comments.Comment)(nil),         // 14: github.constantine27k.crnt_data_manager.api.comments.Comment
	(template.Template)(0),           // 15: github.constantine27k.crnt_data_manager.api.state.template.Template
	(*timestamppb.Timestamp)(nil),    // 16: google.protobuf.Timestamp
	(*status.TaskStatus)(nil),        // 17: github.constantine27k.crnt_data_manager.api.state.status.TaskStatus
	(priority.Priority)(0),           // 18: github.constantine27k.crnt_data_manager.api.state.priority.Priority
}
var file_api_tasks_story_story_proto_depIdxs = []int32{
	14, // 0: github.constantine27k.crnt_data_manager.api.tasks.story.Story.comments:type_name -> github.constantine27k.crnt_data_manager.api.comments.Comment
	15, // 1: github.constantine27k.crnt_data_manager.api.tasks.story.Story.template:type_name -> github.constantine27k.crnt_data_manager.api.state.template.Template
	16, // 2: github.constantine27k.crnt_data_manager.api.tasks.story.Story.created_at:type_name -> google.protobuf.Timestamp
	16, // 3: github.constantine27k.crnt_data_manager.api.tasks.story.Story.deadline:type_name -> google.protobuf.Timestamp
	16, // 4: github.constantine27k.crnt_data_manager.api.tasks.story.Story.updated_at:type_name -> google.protobuf.Timestamp
	17, // 5: github.constantine27k.crnt_data_manager.api.tasks.story.Story.status:type_name -> github.constantine27k.crnt_data_manager.api.state.status.TaskStatus
	18, // 6: github.constantine27k.crnt_data_manager.api.tasks.story.Story.priority:type_name -> github.constantine27k.crnt_data_manager.api.state.priority.Priority
	18, // 7: github.constantine27k.crnt_data_manager.api.tasks.story.StoryInfo.priority:type_name -> github.constantine27k.crnt_data_manager.api.state.priority.Priority
	0,  // 8: github.constantine27k.crnt_data_manager.api.tasks.story.StoryCreateRequest.stories:type_name -> github.constantine27k.crnt_data_manager.api.tasks.story.Story
	0,  // 9: github.constantine27k.crnt_data_manager.api.tasks.story.StoryUpdateRequest.story:type_name -> github.constantine27k.crnt_data_manager.api.tasks.story.Story
	17, // 10: github.constantine27k.crnt_data_manager.api.tasks.story.StoryGetRequest.status:type_name -> github.constantine27k.crnt_data_manager.api.state.status.TaskStatus
	0,  // 11: github.constantine27k.crnt_data_manager.api.tasks.story.StoryGetResponse.stories:type_name -> github.constantine27k.crnt_data_manager.api.tasks.story.Story
	17, // 12: github.constantine27k.crnt_data_manager.api.tasks.story.StoryInfoGetRequest.status:type_name -> github.constantine27k.crnt_data_manager.api.state.status.TaskStatus
	1,  // 13: github.constantine27k.crnt_data_manager.api.tasks.story.StoryInfoGetResponse.story_info:type_name -> github.constantine27k.crnt_data_manager.api.tasks.story.StoryInfo
	0,  // 14: github.constantine27k.crnt_data_manager.api.tasks.story.StoryGetByIDResponse.story:type_name -> github.constantine27k.crnt_data_manager.api.tasks.story.Story
	1,  // 15: github.constantine27k.crnt_data_manager.api.tasks.story.StoryInfoGetByIDResponse.story_info:type_name -> github.constantine27k.crnt_data_manager.api.tasks.story.StoryInfo
	2,  // 16: github.constantine27k.crnt_data_manager.api.tasks.story.StoryRegistry.CreateStory:input_type -> github.constantine27k.crnt_data_manager.api.tasks.story.StoryCreateRequest
	4,  // 17: github.constantine27k.crnt_data_manager.api.tasks.story.StoryRegistry.UpdateStory:input_type -> github.constantine27k.crnt_data_manager.api.tasks.story.StoryUpdateRequest
	6,  // 18: github.constantine27k.crnt_data_manager.api.tasks.story.StoryRegistry.GetStory:input_type -> github.constantine27k.crnt_data_manager.api.tasks.story.StoryGetRequest
	10, // 19: github.constantine27k.crnt_data_manager.api.tasks.story.StoryRegistry.GetStoryByID:input_type -> github.constantine27k.crnt_data_manager.api.tasks.story.StoryGetByIDRequest
	8,  // 20: github.constantine27k.crnt_data_manager.api.tasks.story.StoryRegistry.GetStoryInfo:input_type -> github.constantine27k.crnt_data_manager.api.tasks.story.StoryInfoGetRequest
	12, // 21: github.constantine27k.crnt_data_manager.api.tasks.story.StoryRegistry.GetStoryInfoByID:input_type -> github.constantine27k.crnt_data_manager.api.tasks.story.StoryInfoGetByIDRequest
	3,  // 22: github.constantine27k.crnt_data_manager.api.tasks.story.StoryRegistry.CreateStory:output_type -> github.constantine27k.crnt_data_manager.api.tasks.story.StoryCreateResponse
	5,  // 23: github.constantine27k.crnt_data_manager.api.tasks.story.StoryRegistry.UpdateStory:output_type -> github.constantine27k.crnt_data_manager.api.tasks.story.StoryUpdateResponse
	7,  // 24: github.constantine27k.crnt_data_manager.api.tasks.story.StoryRegistry.GetStory:output_type -> github.constantine27k.crnt_data_manager.api.tasks.story.StoryGetResponse
	11, // 25: github.constantine27k.crnt_data_manager.api.tasks.story.StoryRegistry.GetStoryByID:output_type -> github.constantine27k.crnt_data_manager.api.tasks.story.StoryGetByIDResponse
	9,  // 26: github.constantine27k.crnt_data_manager.api.tasks.story.StoryRegistry.GetStoryInfo:output_type -> github.constantine27k.crnt_data_manager.api.tasks.story.StoryInfoGetResponse
	13, // 27: github.constantine27k.crnt_data_manager.api.tasks.story.StoryRegistry.GetStoryInfoByID:output_type -> github.constantine27k.crnt_data_manager.api.tasks.story.StoryInfoGetByIDResponse
	22, // [22:28] is the sub-list for method output_type
	16, // [16:22] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_api_tasks_story_story_proto_init() }
func file_api_tasks_story_story_proto_init() {
	if File_api_tasks_story_story_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_tasks_story_story_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Story); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_story_story_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_story_story_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_story_story_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_story_story_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_story_story_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_story_story_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_story_story_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_story_story_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryInfoGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_story_story_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryInfoGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_story_story_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryGetByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_story_story_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryGetByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_story_story_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryInfoGetByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tasks_story_story_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryInfoGetByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_tasks_story_story_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_tasks_story_story_proto_goTypes,
		DependencyIndexes: file_api_tasks_story_story_proto_depIdxs,
		MessageInfos:      file_api_tasks_story_story_proto_msgTypes,
	}.Build()
	File_api_tasks_story_story_proto = out.File
	file_api_tasks_story_story_proto_rawDesc = nil
	file_api_tasks_story_story_proto_goTypes = nil
	file_api_tasks_story_story_proto_depIdxs = nil
}
